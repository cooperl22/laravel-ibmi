<?php
namespace Cooperl\IBMi\Facades;

use Illuminate\Support\Facades\Facade;

class ToolkitService extends Facade {

    /**
     * @method static bool isDebug()
     * @method static void getDefaultServiceParams()
     * @method static void getOptionalParams($type, array $optionalParams)
     * @method static void setIsCw($isCw)
     * @method static bool getIsCw()
     * @method static array validPlugSizes()
     * @method static string validPlugSizeList()
     * @method static void plugSizeToBytes($plugSize)
     * @method static void setTransport($transportObject)
     * @method static mixed getTransport()
     * @method static void chooseTransport($transportName = '')
     * @method static void setDb($transportType = '')
     * @method static void setToolkitServiceParams(array $XmlServiceOptions)
     * @method static bool|void getOption($optionName)
     * @method static array getOptions()
     * @method static void setOptions($options = [])
     * @method static bool getToolkitServiceParam($optionName)
     * @method static void disconnect()
     * @method static void disconnectPersistent()
     * @method static void debugLog($stringToLog)
     * @method static bool isDb2()
     * @method static bool setDb2()
     * @method static array|bool specialCall($callType)
     * @method static array|bool callTransportOnly()
     * @method static array|bool performanceData()
     * @method static array|bool licenseXMLSERVICE()
     * @method static array|bool pgmCall($pgmName, $lib, $inputParam = null, $returnParam = null, $options = null)
     * @method static string getErrorMsg()
     * @method static string getErrorCode()
     * @method static void setErrorMsg($msg)
     * @method static void setErrorCode($code)
     * @method static bool getOutputParam(array $OutputArray)
     * @method static string ExecuteProgram($inputXml, $disconnect = false)
     * @method static string makeDbCall($internalKey, $plugSize, $controlKeyString, $inputXml, $disconnect = false)
     * @method static getErrorReason($plugSize)
     * @method static string sendXml($inputXml, $disconnect = false)
     * @method static XMLWrapper getXmlWrapper()
     * @method static bool|void getDiagnostics($info = 'joblog', $jobName = '', $jobUser = '', $jobNumber = '')
     * @method static string getFrontEndVersion()
     * @method static string getBackEndVersion()
     * @method static string getLocalBackEndVersion($library)
     * @method static array|bool CLCommand($command, $exec = '')
     * @method static array|bool CLInteractiveCommand($command)
     * @method static array|bool paseCommand($command)
     * @method static bool qshellCommand($command)
     * @method static array|bool ClCommandWithOutput($command)
     * @method static array|bool ClCommandWithCpf($command)
     * @method static array AddParameter($type, $io, $comment, $varName = '', $value = '', $varying = 'off', $dimension = 0)
     * @method static \ToolkitApi\CharParam AddParameterChar($io, $size, $comment, $varName = '', $value = '', $varying = 'off', $dimension = 0, $by = '', $isArray = false, $ccsidBefore = '', $ccsidAfter = '', $useHex = false)
     * @method static \ToolkitApi\Int32Param AddParameterInt32($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\SizeParam AddParameterSize($comment, $varName = '', $labelFindLen = 0)
     * @method static \ToolkitApi\SizePackParam AddParameterSizePack($comment, $varName = '', $labelFindLen = 0)
     * @method static \ToolkitApi\Int8Param AddParameterInt8($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\Int16Param AddParameterInt16($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\Int64Param AddParameterInt64($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\UInt8Param AddParameterUInt8($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\UInt16Param AddParameterUInt16($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\UInt32Param AddParameterUInt32($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\UInt64Param AddParameterUInt64($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\FloatParam AddParameterFloat($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\RealParam AddParameterReal($io, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\PackedDecParam AddParameterPackDec($io, $length, $scale, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\ZonedParam AddParameterZoned($io, $length, $scale, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static \ToolkitApi\HoleParam AddParameterHole($size, $comment = 'hole')
     * @method static \ToolkitApi\BinParam AddParameterBin($io, $size, $comment, $varName = '', $value = '', $dimension = 0)
     * @method static array AddParameterArray($array)
     * @method static DataStructure AddDataStruct(array $parameters, $name = 'struct_name', $dim = 0, $by = '', $isArray = false, $labelLen = null, $comment = '', $io = 'both')
     * @method static DataStructure AddErrorDataStruct()
     * @method static DataStructure AddErrorDataStructZeroBytes()
     * @method static string getErrorDataStructXml($paramNum = 0)
     * @method static string getErrorDataStructXmlWithCode($paramNum = 0)
     * @method static string getListInfoApiXml($paramNum = 0)
     * @method static string getNumberOfRecordsDesiredApiXml($paramNum = 0)
     * @method static string getSortInformationApiXml($paramNum = 0)
     * @method static string getDummyReceiverAndLengthApiXml($paramNum, $lengthOfReceiverVariable)
     * @method static string getLastError()
     * @method static bool isError()
     * @method static bool|void getInternalKey()
     * @method static bool|void isStateless()
     * @method static void setInternalKey($internalKey)
     * @method static string getControlKey($disconnect = false)
     * @method static void VerifyPLUGName()
     * @method static void verifyInternalKey()
     * @method static mixed getXmlOut()
     * @method static null|resource getConnection()
     * @method static string generate_name()
     * @method static array GenerateErrorParameter()
     * @method static array GenerateErrorParameterZeroBytes()
     * @method static bool verify_CPFError($retPgmArr, $functionErrMsg)
     * @method static bool ParseErrorParameter(array $Error)
     * @method static null|resource getSQLConnection()
     * @method static mixed executeQuery($stmt)
     * @method static void setIsPersistent($isPersistent = false)
     * @method static bool getIsPersistent()
     * @method static array|bool getJobAttributes()
     * @method static string classPath()
     * @method static bool extractErrorFromJoblog(array $programsToLookFor)
     * @method static bool changeCurrentUser($user, $password)
     * @method static bool|null getConfigValue($heading, $key, $default = null)
     * @method static string getPhpOperatingSystem()
     * @method static bool isPhpRunningOnIbmI()
     * @method static bool getPhpCcsid()
     * @return string
     */
    protected static function getFacadeAccessor()
    {
        return 'ts';
    }

}
